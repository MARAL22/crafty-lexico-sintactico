
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCRAFTY_DATACRAFTY_STARTIFFORWHILESTARTSTOPCRAFTY_LIGHTCRAFTY_WATERCRAFTY_WARMCRAFTY_AIRLIGHT_UPLIGHT_DOWNLIGHT_BLINKSET_TRUEFALSErightEND_CRAFTY_DATAEND_CRAFTY_STARTrightASIGNARENTEROrightSUMARESTArightMULTDIVrigthIDENTIFICADORleftPARIZQAIR_DOWN AIR_UP AND ASIGNAR CADENA CRAFTY_AIR CRAFTY_DATA CRAFTY_LIGHT CRAFTY_START CRAFTY_WARM CRAFTY_WATER DELAY DISTINTO DIV DOSPUNTOS ELSE END_CRAFTY_DATA END_CRAFTY_START ENTERO FALSE FOR IDENTIFICADOR IF IGUAL LIGHT_BLINK LIGHT_DOWN LIGHT_UP MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MULT NOT OR PARDER PARIZQ RESTA SET_ START STOP SUMA TRUE WARM_DOWN WARM_UP WATER_DOWN WATER_UP WHILEprogram : dataprogram : codedata : CRAFTY_DATA declaraciondeclaracion : IDENTIFICADOR ASIGNAR ENTEROdeclaracion : IDENTIFICADOR ASIGNAR CADENAdeclaracion : expresionexpresion : ENTEROexpresion : CADENAexpresion : expresion op_a expresionexpresion : PARIZQ expresion PARDERop_a : SUMAop_a : RESTAop_a : MULTop_a : DIVcode : CRAFTY_STARTbloque : elements PARIZQ START PARDER DOSPUNTOSbloque : elements PARIZQ STOP PARDER DOSPUNTOSelements : CRAFTY_LIGHTelements : CRAFTY_WATERelements : CRAFTY_WARMelements : CRAFTY_AIRcuerpo : sentcuerpo : sentenciassentencias : sentsent : declaracionsent : bloquesent : ciclossent : establecerestablecer : IDENTIFICADOR SET_ listasetestablecer : IDENTIFICADOR SET_ DELAY ENTEROestablecer : IDENTIFICADOR SET_ LIGHT_BLINK ENTEROlistaset : AIR_DOWNlistaset : AIR_UPlistaset : LIGHT_DOWNlistaset : LIGHT_UPlistaset : WARM_DOWNlistaset : WARM_UPlistaset : WATER_DOWNlistaset : WATER_UPlistaset : TRUElistaset : FALSEciclos : cicloifciclos : cicloforciclos : ciclowhilecicloif : IF PARIZQ cond PARDER DOSPUNTOS cuerpocicloif : IF PARIZQ cond PARDER DOSPUNTOS cuerpo ELSE DOSPUNTOS cuerpocond : DISTINTO condcond : cond op_log condcond : expresion op_rel expresionop_log : ANDop_log : ORop_rel : MAYORQUEop_rel : MENORQUEop_rel : MAYORIGUALop_rel : MENORIGUALop_rel : IGUALop_rel : DISTINTOciclofor : FOR PARIZQ cond PARDER DOSPUNTOS cuerpociclowhile : WHILE PARIZQ cond PARDER DOSPUNTOS cuerpo'
    
_lr_action_items = {'CRAFTY_DATA':([0,],[4,]),'CRAFTY_START':([0,],[5,]),'$end':([1,2,3,5,6,8,9,10,19,20,21,22,],[0,-1,-2,-15,-3,-7,-8,-6,-4,-5,-9,-10,]),'IDENTIFICADOR':([4,],[7,]),'ENTERO':([4,11,12,13,14,15,16,17,],[8,8,19,8,-11,-12,-13,-14,]),'CADENA':([4,11,12,13,14,15,16,17,],[9,9,20,9,-11,-12,-13,-14,]),'PARIZQ':([4,11,13,14,15,16,17,],[11,11,11,-11,-12,-13,-14,]),'ASIGNAR':([7,],[12,]),'SUMA':([8,9,10,18,21,22,],[-7,-8,14,14,14,-10,]),'RESTA':([8,9,10,18,21,22,],[-7,-8,15,15,15,-10,]),'MULT':([8,9,10,18,21,22,],[-7,-8,16,16,16,-10,]),'DIV':([8,9,10,18,21,22,],[-7,-8,17,17,17,-10,]),'PARDER':([8,9,18,21,22,],[-7,-8,22,-9,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'data':([0,],[2,]),'code':([0,],[3,]),'declaracion':([4,],[6,]),'expresion':([4,11,13,],[10,18,21,]),'op_a':([10,18,21,],[13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> data','program',1,'p_program_data','sintactico.py',19),
  ('program -> code','program',1,'p_program_code','sintactico.py',23),
  ('data -> CRAFTY_DATA declaracion','data',2,'p_data','sintactico.py',28),
  ('declaracion -> IDENTIFICADOR ASIGNAR ENTERO','declaracion',3,'p_declaracion_entero','sintactico.py',32),
  ('declaracion -> IDENTIFICADOR ASIGNAR CADENA','declaracion',3,'p_declaracion_cadena','sintactico.py',36),
  ('declaracion -> expresion','declaracion',1,'p_declaracion_exp','sintactico.py',40),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','sintactico.py',44),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','sintactico.py',48),
  ('expresion -> expresion op_a expresion','expresion',3,'p_expresion_op_a','sintactico.py',52),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_parentesis','sintactico.py',56),
  ('op_a -> SUMA','op_a',1,'p_op_a_suma','sintactico.py',60),
  ('op_a -> RESTA','op_a',1,'p_op_a_resta','sintactico.py',64),
  ('op_a -> MULT','op_a',1,'p_op_a_mult','sintactico.py',68),
  ('op_a -> DIV','op_a',1,'p_op_a_div','sintactico.py',72),
  ('code -> CRAFTY_START','code',1,'p_code','sintactico.py',76),
  ('bloque -> elements PARIZQ START PARDER DOSPUNTOS','bloque',5,'p_bloque_star','sintactico.py',80),
  ('bloque -> elements PARIZQ STOP PARDER DOSPUNTOS','bloque',5,'p_bloque_stop','sintactico.py',84),
  ('elements -> CRAFTY_LIGHT','elements',1,'p_elemets_1','sintactico.py',88),
  ('elements -> CRAFTY_WATER','elements',1,'p_elemets_2','sintactico.py',92),
  ('elements -> CRAFTY_WARM','elements',1,'p_elemets_3','sintactico.py',96),
  ('elements -> CRAFTY_AIR','elements',1,'p_elemets_4','sintactico.py',100),
  ('cuerpo -> sent','cuerpo',1,'p_cuerpo_1','sintactico.py',104),
  ('cuerpo -> sentencias','cuerpo',1,'p_cuerpo_2','sintactico.py',108),
  ('sentencias -> sent','sentencias',1,'p_sentencias','sintactico.py',112),
  ('sent -> declaracion','sent',1,'p_sent_1','sintactico.py',120),
  ('sent -> bloque','sent',1,'p_sent_2','sintactico.py',124),
  ('sent -> ciclos','sent',1,'p_sent_3','sintactico.py',128),
  ('sent -> establecer','sent',1,'p_sent_4','sintactico.py',132),
  ('establecer -> IDENTIFICADOR SET_ listaset','establecer',3,'p_establecer_1','sintactico.py',136),
  ('establecer -> IDENTIFICADOR SET_ DELAY ENTERO','establecer',4,'p_establecer_2','sintactico.py',140),
  ('establecer -> IDENTIFICADOR SET_ LIGHT_BLINK ENTERO','establecer',4,'p_establecer_3','sintactico.py',144),
  ('listaset -> AIR_DOWN','listaset',1,'p_listaset_1','sintactico.py',149),
  ('listaset -> AIR_UP','listaset',1,'p_listaset_2','sintactico.py',153),
  ('listaset -> LIGHT_DOWN','listaset',1,'p_listaset_3','sintactico.py',157),
  ('listaset -> LIGHT_UP','listaset',1,'p_listaset_4','sintactico.py',161),
  ('listaset -> WARM_DOWN','listaset',1,'p_listaset_5','sintactico.py',165),
  ('listaset -> WARM_UP','listaset',1,'p_listaset_6','sintactico.py',169),
  ('listaset -> WATER_DOWN','listaset',1,'p_listaset_7','sintactico.py',173),
  ('listaset -> WATER_UP','listaset',1,'p_listaset_8','sintactico.py',177),
  ('listaset -> TRUE','listaset',1,'p_listaset_9','sintactico.py',181),
  ('listaset -> FALSE','listaset',1,'p_listaset_10','sintactico.py',185),
  ('ciclos -> cicloif','ciclos',1,'p_ciclos_1','sintactico.py',189),
  ('ciclos -> ciclofor','ciclos',1,'p_ciclos_2','sintactico.py',194),
  ('ciclos -> ciclowhile','ciclos',1,'p_ciclos_3','sintactico.py',198),
  ('cicloif -> IF PARIZQ cond PARDER DOSPUNTOS cuerpo','cicloif',6,'p_cicloif_1','sintactico.py',202),
  ('cicloif -> IF PARIZQ cond PARDER DOSPUNTOS cuerpo ELSE DOSPUNTOS cuerpo','cicloif',9,'p_ciclo_if_2','sintactico.py',206),
  ('cond -> DISTINTO cond','cond',2,'p_cond_1','sintactico.py',210),
  ('cond -> cond op_log cond','cond',3,'p_cond_2','sintactico.py',214),
  ('cond -> expresion op_rel expresion','cond',3,'p_cond_3','sintactico.py',218),
  ('op_log -> AND','op_log',1,'p_op_log_1','sintactico.py',222),
  ('op_log -> OR','op_log',1,'p_op_log_2','sintactico.py',226),
  ('op_rel -> MAYORQUE','op_rel',1,'p_op_rel_1','sintactico.py',230),
  ('op_rel -> MENORQUE','op_rel',1,'p_op_rel_2','sintactico.py',234),
  ('op_rel -> MAYORIGUAL','op_rel',1,'p_op_rel_3','sintactico.py',238),
  ('op_rel -> MENORIGUAL','op_rel',1,'p_op_rel_4','sintactico.py',242),
  ('op_rel -> IGUAL','op_rel',1,'p_op_rel_5','sintactico.py',246),
  ('op_rel -> DISTINTO','op_rel',1,'p_op_rel_6','sintactico.py',250),
  ('ciclofor -> FOR PARIZQ cond PARDER DOSPUNTOS cuerpo','ciclofor',6,'p_ciclofor','sintactico.py',255),
  ('ciclowhile -> WHILE PARIZQ cond PARDER DOSPUNTOS cuerpo','ciclowhile',6,'p_ciclowhile','sintactico.py',259),
]
